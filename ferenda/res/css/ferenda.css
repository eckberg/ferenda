/* NTS: Media queries screen sizes used:
   (default): (mobile portrait): site navigation and toc navigation use hamburger foldouts, asides below
   min-width: 480px (tablet + mobile landscape?): site navigation in tabs
   min-width: 768px (desktop): search in header always visible, subheading, site navigation in tabs, asides aside
   min-width: 1140px (fullscreen desctop): toc navigation in leftmost columns
*/

/* this overrides main.css by @verekia */

/* GENERAL/GLOBAL PARTS */
/* PART 1: the general header area - should be thin, green and fixed to the viewport */


/* PART 1, larger displays */

@media only screen and (min-width: 480px) {
}


@media only screen and (min-width: 768px) {
    /* headers should line up with panels that are aside them (when screen is big enough to have asides on the side) */
    div.row > section > h1 {
	margin-top: 0;
    }
}


/* PART 2: The main content area (including document TOC) */

nav[data-toggle='toc'] {
    margin-top: 0; /* used to be 30px, wonder what i was thinking... */
}

/* small screens */
@media (max-width: 768px) {
  /* override the Affix plugin so that the navigation isn't sticky */
  nav.affix[data-toggle='toc'] {
    position: static;
  }

  /* PICK ONE */
  /* don't expand nested items, which pushes down the rest of the page when navigating */
  /* nav[data-toggle='toc'] .nav .active .nav {
    display: none;
  }
  */
  /* alternatively, if you *do* want the second-level navigation to be shown (as seen on this page on mobile), use this */
  nav[data-toggle='toc'] .nav .nav {
    display: block;
  }

  .row-offcanvas {
    position: relative;
    -webkit-transition: all .25s ease-out;
         -o-transition: all .25s ease-out;
            transition: all .25s ease-out;
  }

  .row-offcanvas-right {
    right: 0;
  }

  .row-offcanvas-left {
    left: 0;
  }

  .row-offcanvas-right
  .sidebar-offcanvas {
    right: -50%; /* 6 columns */
  }

  .row-offcanvas-left
  .sidebar-offcanvas {
    left: -50%; /* 6 columns */
  }

  .row-offcanvas-right.active {
    right: 50%; /* 6 columns */
  }

  .row-offcanvas-left.active {
    left: 50%; /* 6 columns */
  }

  .sidebar-offcanvas {
    position: absolute;
    top: 0;
    width: 50%; /* 6 columns */
  }
  
  .row-offcanvas-left.active button span.showbutton { display: none; }
  .row-offcanvas-left.active button span.hidebutton { display: inline-block; } 
  .row-offcanvas-left button span.hidebutton { display: none; }
  .row-offcanvas-left button { position: absolute; top:-30px }
}

img.facsimile { 
    display: none;
    border-left: 1px solid #ddd;
    border-right: 1px solid #ddd;
    width: 100%;
}

body.statusreport div.basefile {
    margin: 2px 0;
    padding: 1px;
    display: inline-block;
}


body.statusreport p.alert {
    padding: 1px;
    margin: 2px;
    display: inline;
}

/* Tighten the accordion panel headers */
div.panel-group > div.panel {
	border-radius: 0;
}
div.panel-group > div.panel > div.panel-heading {
	padding: 3px;
	border-radius: 0;
}
h4.panel-title {
	font-size: 10pt;
}
.panel-group .panel+.panel {
	margin-top: 0;
}
div.panel-body {
	padding: 3px;
	font-size: smaller;
}
div.panel-body div.row {
	margin: 1pt 1pt 6pt 1pt;
}
div.panel-body div.row p:first-child {
	text-indent: 0;
}
div.panel-body div.row p {
	text-indent: 1em;
	margin-bottom: 0;
}
body.search .hit {
	margin-bottom: 1ex;
	padding-left: 4pt;
	border: solid 1px #eee;
}
body.search .hit:nth-child(odd) {
	background-color: #eee;
}

body.search .innerhit {
	margin-left: 1em;
	margin-bottom: 1ex;
}

footer nav {
    text-align: center;
}
footer nav li {
    display: inline;
}
footer li + li::before {
    content: " | ";
}

/* grid-framework.less gives all .rows negative left and right margins
(-15px) for some reason. This causes the row to have more pixels than
body (eg 1310 when body is 1280). This makes it possible to right
scroll the content, which leads to content being misaligned (we end up
with a 15px empty space to the right). Maybe we aren't meant to use
this grid system directly under body? */
.row {
    margin: 0;
}

/* for small screens, there is no left navigation to give extra
   padding to the main article text, so it aligns right at the
   screen edge, which is ugly. Add some padding for breathing room
   (but do it at the article lvl, not body, since the top nav must
   fill the entire width). */
.col-sm-3, .col-sm-5, .col-sm-7, .col-sm-9 {
    padding-left: 0.5em;
    padding-right: 0.5em;
}

nav#toc ul {
    padding-left: 0.5em;
}
nav#toc li {
    list-style: none;
}

nav#toc > ul > li > ul  {
    padding: 0;
}
nav#toc > ul > li > ul > li {
    display: inline;
}

body.search nav#toc > ul > li > ul > li {
    display: list-item;
}

nav#toc > ul > li > p {
    font-weight: bold;
    margin-bottom: 0;
    margin-top: 0.5em;
}

body.toc article ul {
    padding: 0;
    list-style: none;
}
body.toc article ul li {
    padding: 0;
    list-style: none;
    text-indent: -8em;
    margin-left: 8em;
}


@media only screen and (min-width: 480px) {
    
    .col-sm-3, .col-sm-5, .col-sm-7, .col-sm-9 {
        padding: 0 1em 0 0;
    }

    body.frontpage td {
	vertical-align: top;
    }

    
    nav.affix-top {
	width: 97%; /* of the .col-sm-3 element */
    }
    nav.affix {
	position: fixed;
	top: 0;
	bottom: 0;  /* ie the div is 100% of the viewport height */
	overflow: scroll; /* and we can get at the rest if the navmenu is larger than the viewport */
	width: 24%;  /* of the entire page width, FOR SOME REASON */
	
    }

}


@media only screen and (min-width: 768px) {
}


@media only screen and (min-width: 1140px) {
}

